"""init

Revision ID: 1923daaf0702
Revises: 
Create Date: 2023-01-28 19:05:28.339806

"""
from alembic import op
import sqlalchemy as sa
import sqlalchemy_utils
import sqlmodel # added
import app # custom added
from typing import Text # custom added
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '1923daaf0702'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('CourseTopic',
    sa.Column('title', app.models.base_uuid_model.SaTranslationField(astext_type=Text()), nullable=True),
    sa.Column('description', app.models.base_uuid_model.SaTranslationField(astext_type=Text()), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_CourseTopic_id'), 'CourseTopic', ['id'], unique=False)
    op.create_table('Media',
    sa.Column('title', app.models.base_uuid_model.SaTranslationField(astext_type=Text()), nullable=True),
    sa.Column('description', app.models.base_uuid_model.SaTranslationField(astext_type=Text()), nullable=True),
    sa.Column('path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Media_id'), 'Media', ['id'], unique=False)
    op.create_table('FileMedia',
    sa.Column('file_format', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('media_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['media_id'], ['Media.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_FileMedia_id'), 'FileMedia', ['id'], unique=False)
    op.create_table('ImageMedia',
    sa.Column('file_format', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('media_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['media_id'], ['Media.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ImageMedia_id'), 'ImageMedia', ['id'], unique=False)
    op.create_table('CourseCategory',
    sa.Column('title', app.models.base_uuid_model.SaTranslationField(astext_type=Text()), nullable=True),
    sa.Column('description', app.models.base_uuid_model.SaTranslationField(astext_type=Text()), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('course_topic_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('logo_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['course_topic_id'], ['CourseTopic.id'], ),
    sa.ForeignKeyConstraint(['logo_id'], ['ImageMedia.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_CourseCategory_id'), 'CourseCategory', ['id'], unique=False)
    op.create_table('Course',
    sa.Column('title', app.models.base_uuid_model.SaTranslationField(astext_type=Text()), nullable=True),
    sa.Column('description', app.models.base_uuid_model.SaTranslationField(astext_type=Text()), nullable=True),
    sa.Column('status', sa.Enum('public', 'private', 'premiere', name='coursestatusenum'), nullable=True),
    sa.Column('level', sa.Enum('beginner', 'intermediate', 'expert', name='difficultylevelenum'), nullable=True),
    sa.Column('language', sa.Enum('uzbek', 'russian', 'english', name='languageenum'), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('course_category_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('is_free', sa.Boolean(), nullable=False),
    sa.Column('banner_image_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('organization_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('is_for_child', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('trailer_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['banner_image_id'], ['ImageMedia.id'], ),
    sa.ForeignKeyConstraint(['course_category_id'], ['CourseCategory.id'], ),
    sa.ForeignKeyConstraint(['trailer_id'], ['FileMedia.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Course_id'), 'Course', ['id'], unique=False)
    op.create_table('CourseComment',
    sa.Column('text', app.models.base_uuid_model.SaTranslationField(astext_type=Text()), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('course_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('replied_by_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.ForeignKeyConstraint(['course_id'], ['Course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_CourseComment_id'), 'CourseComment', ['id'], unique=False)
    op.create_table('CourseModule',
    sa.Column('title', app.models.base_uuid_model.SaTranslationField(astext_type=Text()), nullable=True),
    sa.Column('description', app.models.base_uuid_model.SaTranslationField(astext_type=Text()), nullable=True),
    sa.Column('content', app.models.base_uuid_model.SaTranslationField(astext_type=Text()), nullable=True),
    sa.Column('level', postgresql.ENUM('beginner', 'intermediate', 'expert', name='difficultylevelenum', inherit_schema=True), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('course_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('is_free', sa.Boolean(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['Course.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_CourseModule_id'), 'CourseModule', ['id'], unique=False)
    op.create_table('CourseLesson',
    sa.Column('title', app.models.base_uuid_model.SaTranslationField(astext_type=Text()), nullable=True),
    sa.Column('description', app.models.base_uuid_model.SaTranslationField(astext_type=Text()), nullable=True),
    sa.Column('content', app.models.base_uuid_model.SaTranslationField(astext_type=Text()), nullable=True),
    sa.Column('id', sqlmodel.sql.sqltypes.GUID(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('sort', sa.Integer(), nullable=True),
    sa.Column('course_module_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('is_free', sa.Boolean(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('video_id', sqlmodel.sql.sqltypes.GUID(), nullable=True),
    sa.Column('is_learned', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['course_module_id'], ['CourseModule.id'], ),
    sa.ForeignKeyConstraint(['video_id'], ['FileMedia.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_CourseLesson_id'), 'CourseLesson', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_CourseLesson_id'), table_name='CourseLesson')
    op.drop_table('CourseLesson')
    op.drop_index(op.f('ix_CourseModule_id'), table_name='CourseModule')
    op.drop_table('CourseModule')
    op.drop_index(op.f('ix_CourseComment_id'), table_name='CourseComment')
    op.drop_table('CourseComment')
    op.drop_index(op.f('ix_Course_id'), table_name='Course')
    op.drop_table('Course')
    op.drop_index(op.f('ix_CourseCategory_id'), table_name='CourseCategory')
    op.drop_table('CourseCategory')
    op.drop_index(op.f('ix_ImageMedia_id'), table_name='ImageMedia')
    op.drop_table('ImageMedia')
    op.drop_index(op.f('ix_FileMedia_id'), table_name='FileMedia')
    op.drop_table('FileMedia')
    op.drop_index(op.f('ix_Media_id'), table_name='Media')
    op.drop_table('Media')
    op.drop_index(op.f('ix_CourseTopic_id'), table_name='CourseTopic')
    op.drop_table('CourseTopic')
    # ### end Alembic commands ###
